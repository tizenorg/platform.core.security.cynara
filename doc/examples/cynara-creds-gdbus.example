/*
 *  Copyright (c) 2016 Samsung Electronics Co., Ltd All Rights Reserved
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License
 */

/*
 * Get client credentials from GDBusConnection
 */

void cynara_log(const char *string, int cynara_status) {
    char buf[BUFSIZ];

    int ret = cynara_strerror(cynara_status, buf, BUFSIZ);
    if (ret != CYNARA_API_SUCCESS) {
        strncpy(buf, "cynara_strerror failed", BUFSIZ);
        buf[BUFSIZ - 1] = '\0';
    }
    if (cynara_status < 0)
        log_error("%s: %s", string, buf);
    else
        log_debug("%s: %s", string, buf);
}

struct Creds {
    char *client = NULL;
    char *user = NULL;
    char *client_session = NULL;

    ~Creds() {
        free(client);
        free(user);
        free(client_session);
    }
};

int get_credentials(GDBusConnection *connection, Creds *creds)
{
    int ret = 0;
    int pid = 0;

    if (!creds)
        return INVALID_PARAMETER;

    /* Do not free this string, it is owned by connection */
    const qchar *unique_name = g_dbus_connection_get_unique_name(connection);

    ret = cynara_creds_gdbus_get_user(connection, unique_name, USER_METHOD_DEFAULT, &(creds->user));
    if (ret != CYNARA_API_SUCCESS) {
        cynara_log("cynara_creds_gdbus_get_user() failed", ret);
        return INVALID_OPERATION;
    }

    ret = cynara_creds_gdbus_get_client(connection, unique_name, CLIENT_METHOD_DEFAULT,
                                        &(creds->client));
    if (ret != CYNARA_API_SUCCESS) {
        cynara_log("cynara_creds_gdbus_get_client() failed", ret);
        return INVALID_OPERATION;
    }

    ret = cynara_creds_gdbus_get_pid(connection, unique_name, &pid);
    if (ret != CYNARA_API_SUCCESS) {
        cynara_log("cynara_creds_gdbus_get_pid() failed", ret);
        return INVALID_OPERATION;
    }

    creds->client_session = cynara_session_from_pid(pid);
    return SUCCESS;
}
